{"ast":null,"code":"import _classCallCheck from\"C:/Users/svyat/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/svyat/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/svyat/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/svyat/dev/react-mesto-api-full/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';var Api=/*#__PURE__*/function(_React$Component){_inherits(Api,_React$Component);var _super=_createSuper(Api);function Api(options){var _this;_classCallCheck(this,Api);_this=_super.call(this,options);_this.baseUrl=options.baseUrl;_this.headers=options.headers;return _this;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this.baseUrl)+'/cards',{headers:this.headers}).then(this._getResponseData);}},{key:\"createCard\",value:function createCard(inputValues){return fetch(\"\".concat(this.baseUrl)+'/cards',{method:'POST',headers:this.headers,body:JSON.stringify({name:inputValues.title,link:inputValues.link})}).then(this._getResponseData);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this.baseUrl)+'/cards/'+\"\".concat(cardId),{method:'DELETE',headers:this.headers}).then(this._getResponseData);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){return fetch(\"\".concat(this.baseUrl)+'/cards/likes/'+\"\".concat(cardId),{method:\"\".concat(isLiked?'PUT':'DELETE'),headers:this.headers}).then(this._getResponseData);}// putLike(cardId) {\n//     return fetch(`${this.baseUrl}` + '/cards/likes/' + `${cardId}`, {\n//         method: 'PUT',\n//         headers: this.headers,\n//     })\n//         .then(this._getResponseData)\n// }\n// deleteLike(cardId) {\n//     return fetch(`${this.baseUrl}` + '/cards/likes/' + `${cardId}`, {\n//         method: 'DELETE',\n//         headers: this.headers,\n//     })\n//         .then(this._getResponseData)\n// }\n},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this.baseUrl)+'/users/me',{headers:this.headers}).then(this._getResponseData);}},{key:\"editUserInfo\",value:function editUserInfo(inputValues){return fetch(\"\".concat(this.baseUrl)+'/users/me',{method:'PATCH',headers:this.headers,body:JSON.stringify({name:inputValues.name,about:inputValues.about})}).then(this._getResponseData);}},{key:\"editAvatar\",value:function editAvatar(inputValues){return fetch(\"\".concat(this.baseUrl)+'/users/me/avatar',{method:'PATCH',headers:this.headers,body:JSON.stringify({avatar:inputValues.avatar})}).then(this._getResponseData);}}]);return Api;}(React.Component);var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-24',headers:{authorization:'be14df10-ef56-405e-9870-1c2d83310783','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["C:/Users/svyat/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["React","Api","options","baseUrl","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","inputValues","method","body","JSON","stringify","name","title","link","cardId","isLiked","about","avatar","Component","api","authorization"],"mappings":"4fAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,G,sGACF,aAAYC,OAAZ,CAAqB,qCACjB,uBAAMA,OAAN,EAEA,MAAKC,OAAL,CAAeD,OAAO,CAACC,OAAvB,CACA,MAAKC,OAAL,CAAeF,OAAO,CAACE,OAAvB,CAJiB,aAKpB,C,gDAED,0BAAiBC,GAAjB,CAAsB,CAClB,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACH,C,wBAED,mBAAW,CACP,MAAOC,CAAAA,KAAK,CAAC,UAAG,KAAKR,OAAR,EAAoB,QAArB,CAA+B,CACvCC,OAAO,CAAE,KAAKA,OADyB,CAA/B,CAAL,CAGFQ,IAHE,CAGG,KAAKC,gBAHR,CAAP,CAIH,C,0BAED,oBAAWC,WAAX,CAAwB,CACpB,MAAOH,CAAAA,KAAK,CAAC,UAAG,KAAKR,OAAR,EAAoB,QAArB,CAA+B,CACvCY,MAAM,CAAE,MAD+B,CAEvCX,OAAO,CAAE,KAAKA,OAFyB,CAGvCY,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,IAAI,CAAEL,WAAW,CAACM,KADD,CAEjBC,IAAI,CAAEP,WAAW,CAACO,IAFD,CAAf,CAHiC,CAA/B,CAAL,CAQFT,IARE,CAQG,KAAKC,gBARR,CAAP,CASH,C,0BAED,oBAAWS,MAAX,CAAmB,CACf,MAAOX,CAAAA,KAAK,CAAC,UAAG,KAAKR,OAAR,EAAoB,SAApB,WAAmCmB,MAAnC,CAAD,CAA8C,CACtDP,MAAM,CAAE,QAD8C,CAEtDX,OAAO,CAAE,KAAKA,OAFwC,CAA9C,CAAL,CAIFQ,IAJE,CAIG,KAAKC,gBAJR,CAAP,CAKH,C,oCAGD,8BAAqBS,MAArB,CAA6BC,OAA7B,CAAsC,CAClC,MAAOZ,CAAAA,KAAK,CAAC,UAAG,KAAKR,OAAR,EAAoB,eAApB,WAAyCmB,MAAzC,CAAD,CAAoD,CAC5DP,MAAM,WAAKQ,OAAO,CAAG,KAAH,CAAW,QAAvB,CADsD,CAE5DnB,OAAO,CAAE,KAAKA,OAF8C,CAApD,CAAL,CAIFQ,IAJE,CAIG,KAAKC,gBAJR,CAAP,CAKH,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;2BAEA,sBAAc,CACV,MAAOF,CAAAA,KAAK,CAAC,UAAG,KAAKR,OAAR,EAAoB,WAArB,CAAkC,CAC1CC,OAAO,CAAE,KAAKA,OAD4B,CAAlC,CAAL,CAGFQ,IAHE,CAGG,KAAKC,gBAHR,CAAP,CAIH,C,4BAED,sBAAaC,WAAb,CAA0B,CACtB,MAAOH,CAAAA,KAAK,CAAC,UAAG,KAAKR,OAAR,EAAoB,WAArB,CAAkC,CAC1CY,MAAM,CAAE,OADkC,CAE1CX,OAAO,CAAE,KAAKA,OAF4B,CAG1CY,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,IAAI,CAAEL,WAAW,CAACK,IADD,CAEjBK,KAAK,CAAEV,WAAW,CAACU,KAFF,CAAf,CAHoC,CAAlC,CAAL,CAQFZ,IARE,CAQG,KAAKC,gBARR,CAAP,CASH,C,0BAGD,oBAAWC,WAAX,CAAwB,CACpB,MAAOH,CAAAA,KAAK,CAAC,UAAG,KAAKR,OAAR,EAAoB,kBAArB,CAAyC,CACjDY,MAAM,CAAE,OADyC,CAEjDX,OAAO,CAAE,KAAKA,OAFmC,CAGjDY,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBO,MAAM,CAAEX,WAAW,CAACW,MADH,CAAf,CAH2C,CAAzC,CAAL,CAOFb,IAPE,CAOG,KAAKC,gBAPR,CAAP,CAQH,C,iBAjGab,KAAK,CAAC0B,S,EAqGxB,GAAMC,CAAAA,GAAG,CAAG,GAAI1B,CAAAA,GAAJ,CAAQ,CAChBE,OAAO,CAAE,6CADO,CAEhBC,OAAO,CAAE,CACLwB,aAAa,CAAE,sCADV,CAEL,eAAgB,kBAFX,CAFO,CAAR,CAAZ,CAQA,cAAeD,CAAAA,GAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Api extends React.Component {\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    getCards() {\r\n        return fetch(`${this.baseUrl}` + '/cards', {\r\n            headers: this.headers,\r\n        })\r\n            .then(this._getResponseData)\r\n    }\r\n\r\n    createCard(inputValues) {\r\n        return fetch(`${this.baseUrl}` + '/cards', {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: inputValues.title,\r\n                link: inputValues.link\r\n            })\r\n        })\r\n            .then(this._getResponseData)\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this.baseUrl}` + '/cards/' + `${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n        })\r\n            .then(this._getResponseData)\r\n    }\r\n\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        return fetch(`${this.baseUrl}` + '/cards/likes/' + `${cardId}`, {\r\n            method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n            headers: this.headers\r\n        })\r\n            .then(this._getResponseData)\r\n    }\r\n\r\n\r\n    // putLike(cardId) {\r\n    //     return fetch(`${this.baseUrl}` + '/cards/likes/' + `${cardId}`, {\r\n    //         method: 'PUT',\r\n    //         headers: this.headers,\r\n    //     })\r\n    //         .then(this._getResponseData)\r\n    // }\r\n\r\n    // deleteLike(cardId) {\r\n    //     return fetch(`${this.baseUrl}` + '/cards/likes/' + `${cardId}`, {\r\n    //         method: 'DELETE',\r\n    //         headers: this.headers,\r\n    //     })\r\n    //         .then(this._getResponseData)\r\n    // }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this.baseUrl}` + '/users/me', {\r\n            headers: this.headers\r\n        })\r\n            .then(this._getResponseData)\r\n    }\r\n\r\n    editUserInfo(inputValues) {\r\n        return fetch(`${this.baseUrl}` + '/users/me', {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: inputValues.name,\r\n                about: inputValues.about,\r\n            })\r\n        })\r\n            .then(this._getResponseData)\r\n    }\r\n\r\n\r\n    editAvatar(inputValues) {\r\n        return fetch(`${this.baseUrl}` + '/users/me/avatar', {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: inputValues.avatar\r\n            })\r\n        })\r\n            .then(this._getResponseData)\r\n    }\r\n\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\r\n    headers: {\r\n        authorization: 'be14df10-ef56-405e-9870-1c2d83310783',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}